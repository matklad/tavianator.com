<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.13.2/dist/katex.min.css" integrity="sha384-Cqd8ihRLum0CCg8rz0hYKPoLZ3uw+gES2rXQXycqnL5pgVQIflxAUDS7ZSjITLb5" crossorigin="anonymous">

<style>
html {
    scroll-behavior: smooth;
}

.content .infobar {
    color: var(--icons);
    border-bottom: 1px solid var(--icons);
}

.content .infobar p {
    margin: 1px 0;
}

.content .infobar a,
.content .infobar a:link,
.content .infobar a:visited {
    color: var(--icons);
    transition: color 0.5s;
    text-decoration: none;
}

.content .infobar a:hover {
    color: var(--icons-hover);
}

.content .infobar i {
    margin-left: 0.5em;
}

.content .infobar p > i:first-child,
.content .infobar p > a:first-child i {
    margin-left: 0;
}

.content .elsewhere p {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    column-gap: 1em;
}

.content .elsewhere a,
.content .elsewhere a:link,
.content .elsewhere a:visited {
    color: var(--fg);
    transition: color 0.5s;
    text-decoration: none;
}

.content .elsewhere a:hover {
    color: var(--links);
}

.content h1 {
    margin-bottom: 0.25em;
}

.content p {
    text-align: justify;
    hyphens: auto;
    word-wrap: break-word;
}

.content blockquote p {
    text-align: left;
}

.content blockquote i.fa {
    margin-left: 0.5em;
}

.content blockquote i.fa:first-child {
    margin-left: 0;
}

.content a:target,
.content .footnote-definition:target {
    scroll-margin-top: var(--menu-bar-height);
}

.content sup {
    line-height: 0;
}

.katex {
    white-space: nowrap;
}
</style>

<script defer src="https://cdn.jsdelivr.net/npm/katex@0.13.2/dist/katex.min.js" integrity="sha384-1Or6BdeNQb0ezrmtGeqQHFpppNd7a/gw29xeiSikBbsb44xu3uAo8c7FwbF5jhbd" crossorigin="anonymous"></script>

<script>
document.addEventListener("DOMContentLoaded", () => {
    let codes = [...document.getElementsByTagName("code")];
    for (let code of codes) {
        if (code.classList.contains("language-math")) {
            let p = document.createElement("p");
            katex.render(code.textContent, p, { displayMode: true });
            let pre = code.parentNode;
            pre.parentNode.replaceChild(p, pre);
        } else if (/^\$.*\$$/.test(code.textContent)) {
            let span = document.createElement("span");
            katex.render(code.textContent.slice(1, -1), span);
            code.parentNode.replaceChild(span, code);
        }
    }
});
</script>
